`timescale 1ns/1ps
module priority_lock (
    input  wire       clk,
    input  wire       rst,        // synchronous reset
    input  wire [3:0] req,        // request lines
    output reg  [3:0] grant       // one-hot grant output
);

    reg [1:0] pointer;  // round-robin pointer
    reg grant_found;
    integer i;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            grant   <= 4'b0000;
            pointer <= 2'd0;
        end 
        else begin
            grant       <= 4'b0000;
            grant_found <= 1'b0;

            for (i = 0; i < 4; i = i + 1) begin
                if (!grant_found && req[(pointer + i) % 4]) begin
                    grant[(pointer + i) % 4] <= 1'b1;
                    pointer <= (pointer + i + 1) % 4;
                    grant_found <= 1'b1;  // ensure only one grant
                end
            end
        end
    end

endmodule
